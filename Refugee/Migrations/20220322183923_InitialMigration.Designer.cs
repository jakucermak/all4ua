// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Refugee.Database;

#nullable disable

namespace Refugee.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220322183923_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Refugee.Models.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdultsAmount")
                        .HasColumnType("integer")
                        .HasColumnName("adults_amount");

                    b.Property<double>("DateCreated")
                        .HasColumnType("double precision")
                        .HasColumnName("date_Created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FinalDestination")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("final_destination");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<int>("KidsAmount")
                        .HasColumnType("integer")
                        .HasColumnName("kids_amount");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("PickupDestination")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pickup_destination");

                    b.Property<string>("Provide")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("provide");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Refugee.Models.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverID")
                        .HasColumnType("integer")
                        .HasColumnName("driver_id");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DriverID")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Refugee.Models.Entities.Location", b =>
                {
                    b.HasOne("Refugee.Models.Entities.Driver", "Driver")
                        .WithOne("Location")
                        .HasForeignKey("Refugee.Models.Entities.Location", "DriverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Refugee.Models.Entities.Driver", b =>
                {
                    b.Navigation("Location")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
